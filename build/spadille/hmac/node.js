'use strict';function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}module.exports.init=function(){const crypto=require('crypto');const HASH='sha512';const hmac=(()=>{var _ref=_asyncToGenerator(function*(secret,message){const hash=crypto.createHmac(HASH,secret);hash.update(message);return hash.digest('hex')});return function hmac(_x,_x2){return _ref.apply(this,arguments)}})();return{hmac}};